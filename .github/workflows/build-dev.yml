name: Build Dev

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths:
      - 'DEV-VERSION'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    env:
      OUTPUT_BINARY: ip
      GO_VERSION: 1.24

    steps:
      - uses: actions/checkout@v3
      - name: Load VERSION
        run: |
          if [ -f DEV-VERSION ]; then
            echo "VERSION=$(cat DEV-VERSION)" >> $GITHUB_ENV
          else
            echo "DEV-VERSION file not found!" && exit 1
          fi
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build
        run: |
          CGO_ENABLED=0 go build -o  ${{ env.OUTPUT_BINARY }}-${{matrix.goos}}-${{matrix.goarch}} .
      - name: Package
        run: |
          tar -czvf ${{ env.OUTPUT_BINARY }}-${{matrix.goos}}-${{matrix.goarch}}.tar.gz ./${{ env.OUTPUT_BINARY }}-${{matrix.goos}}-${{matrix.goarch}}
      - name: 上传至Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ env.VERSION }}
          artifacts:  ./${{ env.OUTPUT_BINARY }}*
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.VERSION }}
          allowUpdates: true
          prerelease: true
        env:
          export PATH: $PATH:/usr/local/go/bin            

  docker:
    runs-on: ubuntu-latest
    needs: build
    env:
      IMAGE_NAME: wjqserver/ip
      DOCKERFILE: docker/dockerfile/dev/Dockerfile
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Load VERSION
        run: |
          if [ -f DEV-VERSION ]; then
            echo "VERSION=$(cat DEV-VERSION)" >> $GITHUB_ENV
          else
            echo "DEV-VERSION file not found!" && exit 1
          fi         

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 构建镜像
        uses: docker/build-push-action@v6
        with:
          file: ./${{ env.DOCKERFILE }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: | 
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.IMAGE_NAME }}:dev
